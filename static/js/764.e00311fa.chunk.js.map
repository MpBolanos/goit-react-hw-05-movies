{"version":3,"file":"static/js/764.e00311fa.chunk.js","mappings":"+SAEMA,EAAM,mCAEZC,EAAAA,EAAAA,SAAAA,QAAyB,gCAElB,IAAMC,EAAW,eAAAC,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,IAAA,IAAAC,EAAA,OAAAF,IAAAA,MAAA,SAAAG,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACFT,EAAAA,EAAAA,IAAU,8BAADU,OAA+BX,IAAO,KAAD,EAAvD,OAARO,EAAQC,EAAAI,KAAAJ,EAAAK,OAAA,SACPN,EAASO,KAAKC,SAAO,wBAAAP,EAAAQ,OAAA,GAAAV,EAAA,KAC7B,kBAHuB,OAAAH,EAAAc,MAAA,KAAAC,UAAA,KAKXC,EAAQ,eAAAC,GAAAhB,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAgB,EAAMC,GAAK,IAAAf,EAAA,OAAAF,IAAAA,MAAA,SAAAkB,GAAA,cAAAA,EAAAd,KAAAc,EAAAb,MAAA,cAAAa,EAAAb,KAAA,EACVT,EAAAA,EAAAA,IAAU,wBAADU,OACNX,EAAG,qDAAAW,OAAoDW,IAC/E,KAAD,EAFa,OAARf,EAAQgB,EAAAX,KAAAW,EAAAV,OAAA,SAGPN,EAASO,KAAKC,SAAO,wBAAAQ,EAAAP,OAAA,GAAAK,EAAA,KAC7B,gBALoBG,GAAA,OAAAJ,EAAAH,MAAA,KAAAC,UAAA,KAORO,EAAU,eAAAC,GAAAtB,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAsB,EAAMC,GAAO,IAAArB,EAAA,OAAAF,IAAAA,MAAA,SAAAwB,GAAA,cAAAA,EAAApB,KAAAoB,EAAAnB,MAAA,cAAAmB,EAAAnB,KAAA,EACdT,EAAAA,EAAAA,IAAU,SAADU,OAAUiB,EAAO,aAAAjB,OAAYX,IAAO,KAAD,EAArD,OAARO,EAAQsB,EAAAjB,KAAAiB,EAAAhB,OAAA,SACPN,EAASO,MAAI,wBAAAe,EAAAb,OAAA,GAAAW,EAAA,KACrB,gBAHsBG,GAAA,OAAAJ,EAAAT,MAAA,KAAAC,UAAA,KAKVa,EAAO,eAAAC,GAAA5B,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAA4B,EAAML,GAAO,IAAArB,EAAA,OAAAF,IAAAA,MAAA,SAAA6B,GAAA,cAAAA,EAAAzB,KAAAyB,EAAAxB,MAAA,cAAAwB,EAAAxB,KAAA,EACXT,EAAAA,EAAAA,IAAU,SAADU,OAAUiB,EAAO,qBAAAjB,OAAoBX,IAAO,KAAD,EAA7D,OAARO,EAAQ2B,EAAAtB,KAAAsB,EAAArB,OAAA,SACPN,EAASO,KAAKqB,MAAI,wBAAAD,EAAAlB,OAAA,GAAAiB,EAAA,KAC1B,gBAHmBG,GAAA,OAAAJ,EAAAf,MAAA,KAAAC,UAAA,KAKPmB,EAAU,eAAAC,GAAAlC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAkC,EAAMX,GAAO,IAAArB,EAAA,OAAAF,IAAAA,MAAA,SAAAmC,GAAA,cAAAA,EAAA/B,KAAA+B,EAAA9B,MAAA,cAAA8B,EAAA9B,KAAA,EACdT,EAAAA,EAAAA,IAAU,SAADU,OAAUiB,EAAO,qBAAAjB,OAAoBX,IAAO,KAAD,EAA7D,OAARO,EAAQiC,EAAA5B,KAAA4B,EAAA3B,OAAA,SACPN,EAASO,KAAKC,SAAO,wBAAAyB,EAAAxB,OAAA,GAAAuB,EAAA,KAC7B,gBAHsBE,GAAA,OAAAH,EAAArB,MAAA,KAAAC,UAAA,I,sFCsBvB,UA9Ce,WACb,IAAAwB,GAAmCC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAxCI,EAAMF,EAAA,GAAEG,EAAgBH,EAAA,GAC/BI,GAAwCC,EAAAA,EAAAA,MAAiBC,GAAAL,EAAAA,EAAAA,GAAAG,EAAA,GAAlDG,EAAYD,EAAA,GAAEE,EAAeF,EAAA,GAC5B5B,EAAU6B,EAAV7B,MACF+B,GAAWC,EAAAA,EAAAA,MAqBjB,OARAC,EAAAA,EAAAA,YAAU,WACHjC,IACLH,EAAAA,EAAAA,IAASG,GAAOkC,KAAKT,EAEvB,GAAG,CAACzB,KAKFmC,EAAAA,EAAAA,MAAA,QAAMC,UAAU,aAAaC,SAnBV,SAAAC,GACnBA,EAAEC,iBACF,IAAMC,EAAOF,EAAEG,cACTC,EAAWF,EAAKG,SAAS3C,MAAM4C,MACrCd,EAA6B,KAAbY,EAAkB,CAAE1C,MAAO0C,GAAa,CAAC,GACzDF,EAAKK,OACP,EAasDC,SAAA,EAClDC,EAAAA,EAAAA,KAAA,SAAOC,KAAK,OAAOC,KAAK,QAAQC,aAAclD,GAAS,MACvD+C,EAAAA,EAAAA,KAAA,UAAQX,UAAU,YAAWY,KAAK,SAAQF,SAAC,WACxB,IAAlBtB,EAAO2B,QAAgBnD,GACtB+C,EAAAA,EAAAA,KAAA,OAAAD,SAAK,mCAELC,EAAAA,EAAAA,KAAA,MAAAD,SACGtB,EAAO4B,KAAI,SAAAC,GAAK,OACfN,EAAAA,EAAAA,KAAA,MAAAD,UACEC,EAAAA,EAAAA,KAACO,EAAAA,GAAO,CAACC,GAAE,WAAAlE,OAAagE,EAAMG,IAAMC,MAAO,CAAEC,KAAM3B,GAAWe,SAC3DO,EAAMM,SAFFN,EAAMG,GAIV,QAMjB,C","sources":["API/Api.js","pages/Movies.js"],"sourcesContent":["import axios from 'axios';\n\nconst KEY = '3baa68ea77749629240e5bf215168455';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport const getTrending = async () => {\n  const response = await axios.get(`trending/movie/day?api_key=${KEY}`);\n  return response.data.results;\n};\n\nexport const getQuery = async query => {\n  const response = await axios.get(\n    `search/movie?api_key=${KEY}&language=en-US&page=1&include_adult=false&query=${query}`\n  );\n  return response.data.results;\n};\n\nexport const getDetails = async movieId => {\n  const response = await axios.get(`movie/${movieId}?api_key=${KEY}`);\n  return response.data;\n};\n\nexport const getCast = async movieId => {\n  const response = await axios.get(`movie/${movieId}/credits?api_key=${KEY}`);\n  return response.data.cast;\n};\n\nexport const getReviews = async movieId => {\n  const response = await axios.get(`movie/${movieId}/reviews?api_key=${KEY}`);\n  return response.data.results;\n};","import { getQuery } from '../API/Api';\nimport { useEffect, useState } from 'react';\nimport { useSearchParams, NavLink, useLocation } from 'react-router-dom';\n\nconst Movies = () => {\n  const [movies, setSearchedMovie] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const { query } = searchParams;\n  const location = useLocation();\n\n  \n  const handleSubmit = e => {\n    e.preventDefault();\n    const form = e.currentTarget;\n    const newQuery = form.elements.query.value;\n    setSearchParams(newQuery !== '' ? { query: newQuery } : {});\n    form.reset();\n  };\n\n  \n\n  useEffect(() => {\n    if (!query) return; \n    getQuery(query).then(setSearchedMovie);\n    \n  }, [query]);\n\n \n\n  return (\n    <form className='formSearch' onSubmit={handleSubmit}>\n      <input type=\"text\" name=\"query\" defaultValue={query || ''} />\n      <button className='btnSearch'type=\"submit\">Search</button>\n      {movies.length === 0 && query ? (\n        <div>No results. Please try again.</div>\n      ) : (\n        <ul>\n          {movies.map(movie => (\n            <li key={movie.id}>\n              <NavLink to={`/movies/${movie.id}`} state={{ from: location }}>\n                {movie.title}\n              </NavLink>\n            </li>\n          ))}\n        </ul>\n      )}\n    </form>\n  );\n};\n\nexport default Movies;"],"names":["KEY","axios","getTrending","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","response","_context","prev","next","concat","sent","abrupt","data","results","stop","apply","arguments","getQuery","_ref2","_callee2","query","_context2","_x","getDetails","_ref3","_callee3","movieId","_context3","_x2","getCast","_ref4","_callee4","_context4","cast","_x3","getReviews","_ref5","_callee5","_context5","_x4","_useState","useState","_useState2","_slicedToArray","movies","setSearchedMovie","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","setSearchParams","location","useLocation","useEffect","then","_jsxs","className","onSubmit","e","preventDefault","form","currentTarget","newQuery","elements","value","reset","children","_jsx","type","name","defaultValue","length","map","movie","NavLink","to","id","state","from","title"],"sourceRoot":""}